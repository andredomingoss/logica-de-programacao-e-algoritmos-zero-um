1 - Faça um algoritmo que leia o nome de 3 alunos, os coloque num vetor, e imprima com os na tela.
Algoritmo "semnome"
// Disciplina   : [Linguagem e Lógica de Programação]
// Autor(a)    : André
Var
alunos: vetor[1..3] de caractere
indice: inteiro


Inicio
para indice <- 1 ate 3 faca
     escreval("================")
     escreval("Dados do aluno ", indice)
     escreval("================")
     escreval("Digite seu nome: ")
     leia(alunos[indice])
fimpara

 escreval("Alunos inseridos no bancos de dados!")

Fimalgoritmo

2 - Faça um algoritmo que irá ler a quantidade de alunos que uma turma possui, pedirá o nome e a nota (2 notas) de cada aluno, e apresentará ao final do programa quem foi o melhor aluno.
Algoritmo "semnome"
// Disciplina   : [Linguagem e Lógica de Programação]
// Autor(a)    : André
Var
alunos: vetor[1..50] de caractere
nota1, nota2, media: vetor[1..50] de real
somaDaMedia, melhorNota: real
indice,quantidade: inteiro
melhorAluno: caractere


Inicio
escreval("Quantos alunos tem na turma?")
leia(quantidade)


para indice <- 1 ate quantidade faca
     escreval("====================")
     escreval("Dados do aluno ", indice)
     escreval("====================")
     
     escreval("Digite o nome do aluno: ")
     leia(alunos[indice])
     
     escreval("Nota 1: ")
     leia(nota1[indice])
     escreval("Nota 2: ")
     leia(nota2[indice])
     escreval("Média: ")
     media[indice] <- (nota1[indice] + nota2[indice]) / 2
     escreval(media[indice]:5:2)
     
     somaDaMedia <- somaDaMedia + media[indice]
fimpara

melhorAluno <- alunos[1]
melhorNota <- media[1]:5:2

para indice <- 1 ate quantidade faca
     se (media[indice] > melhorNota) entao
        melhorAluno <- alunos[indice]
        melhorNota <- media[indice]:5:2
     fimse
fimpara

escreval("========================================")
escreval(" Parabéns para o(a) ", melhorAluno," foi o melhor aluno(a) da turma, com a nota ", melhorNota)
escreval("========================================")

Fimalgoritmo

3 - Faça uma função chamada "OrdenaVetor" que irá receber 10 valores, irá ordena-los e exibir na tela já ordenados.
Algoritmo "semnome"
// Disciplina   : [Linguagem e Lógica de Programação]
// Autor(a)    : André Domingos

Var
v: vetor[1..10] de inteiro
contador: inteiro


procedimento OrdenaVetor()
var
   aux, i, j: inteiro
   
Inicio
    para i <- 1 ate 9 faca
        para j <- i + 1 ate 10 faca
            se(v[i] > v[j]) entao
                aux <- v[i]
                v[i] <- v[j]
                v[j] <- aux
            fimse
        fimpara
    fimpara
fimprocedimento


Inicio
para contador <- 1 ate 10 faca
   escreval("Digite o valor do número ", contador, ": ")
   leia(v[contador])
fimpara

OrdenaVetor()
escreval("======================")
escreval("Vetores em ordem: ")
escreval("======================")

para contador <- 1 ate 10 faca
   escreval(v[contador])
fimpara


Fimalgoritmo

4 - Faça um algoritmo de reserva de cadeiras do cinema, apenas da fileira C. Use procedimentos.
Algoritmo "semnome"
// Disciplina   : [Linguagem e Lógica de Programação]
// Autor(a)    : André Domingos

Var
c: vetor[1..19] de caractere
reservarCadeira: inteiro
reservarOutra: caractere

procedimento mostrarFileira()
var
i: inteiro

inicio
para i <- 1 ate 12 faca
   se(c[i] = "") entao
      escreval("[C", i,"]")
   senao
      escreval("[---]")
   fimse
fimpara
fimprocedimento

procedimento programaPrincipal()
var

Inicio
mostrarFileira()

escreval("Recervar a cadeira na fileira c: ")
leia(reservarCadeira)

se(c[reservarCadeira] = "") entao
   c[reservarCadeira] <- "X"
   escreval("Cadeira ", reservarCadeira, " Reservada!")
senao
   escreval("Lugar ocupado!")
fimse

repita
    escreval("Quer reservar outra cadeira? [S/N]")
    leia(reservarOutra)
    
    escolha reservarOutra
       caso "S"
            programaPrincipal()
       caso "N"
            escreval("Nós agredecemos! Até a próxima!")
       outrocaso
            escreval("Ops, opção inválida!")
    fimescolha
ate reservarOutra = "N"


fimprocedimento

inicio
programaPrincipal()


Fimalgoritmo

5 - Faça um algoritmo que preencha uma matriz de [1..3, 1..3] e mostre quais sao as posicoes que possuem valores pares.
Algoritmo "semnome"
// Disciplina   : [Linguagem e Lógica de Programação]
// Autor(a)    : André Domingos

Var
matrizValores: vetor[1..3, 1..3] de inteiro
linha, coluna, totalPares: inteiro

Inicio
para linha <- 1 ate 3 faca
  para coluna <- 1 ate 3 faca
     escreval("Digite o valor da posição [", linha, ", ", coluna, "]: ")
     leia(matrizValores[linha, coluna])
  fimpara
fimpara

totalPares <- 0

para linha <- 1 ate 3 faca
   para coluna <- 1 ate 3 faca
      se(matrizValores[linha, coluna] % 2 = 0) entao
         escreval("{", matrizValores[linha, coluna]:2, "}")
         totalPares <- totalPares + 1
      senao
         escreval(matrizValores[linha, coluna]:4)
      fimse
   fimpara
fimpara

escreval("O total de pares digitados foi ", totalPares)


Fimalgoritmo
